<?php
/**
 * PartialBlockIdentifier
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Rosetta
 *
 * A Standard for Blockchain Interaction
 *
 * The version of the OpenAPI document: 1.3.1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the PartialBlockIdentifier model.
 *
 * When fetching data by BlockIdentifier, it may be possible to only specify the index or hash. If neither property is specified, it is assumed that the client is making a request at the current block.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class PartialBlockIdentifier 
{
        /**
     * @var int|null
     * @SerializedName("index")
     * @Assert\Type("int")
     * @Type("int")
     */
    protected $index;

    /**
     * @var string|null
     * @SerializedName("hash")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $hash;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->index = isset($data['index']) ? $data['index'] : null;
        $this->hash = isset($data['hash']) ? $data['hash'] : null;
    }

    /**
     * Gets index.
     *
     * @return int|null
     */
    public function getIndex()
    {
        return $this->index;
    }

    /**
     * Sets index.
     *
     * @param int|null $index
     *
     * @return $this
     */
    public function setIndex($index = null)
    {
        $this->index = $index;

        return $this;
    }

    /**
     * Gets hash.
     *
     * @return string|null
     */
    public function getHash()
    {
        return $this->hash;
    }

    /**
     * Sets hash.
     *
     * @param string|null $hash
     *
     * @return $this
     */
    public function setHash($hash = null)
    {
        $this->hash = $hash;

        return $this;
    }
}


