<?php
/**
 * MempoolResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Rosetta
 *
 * A Standard for Blockchain Interaction
 *
 * The version of the OpenAPI document: 1.3.1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the MempoolResponse model.
 *
 * A MempoolResponse contains all transaction identifiers in the mempool for a particular network_identifier.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class MempoolResponse 
{
        /**
     * @var OpenAPI\Server\Model\TransactionIdentifier[]
     * @SerializedName("transaction_identifiers")
     * @Assert\NotNull()
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\TransactionIdentifier")
     * })
     * @Type("array<OpenAPI\Server\Model\TransactionIdentifier>")
     */
    protected $transactionIdentifiers;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->transactionIdentifiers = isset($data['transactionIdentifiers']) ? $data['transactionIdentifiers'] : null;
    }

    /**
     * Gets transactionIdentifiers.
     *
     * @return OpenAPI\Server\Model\TransactionIdentifier[]
     */
    public function getTransactionIdentifiers(): array
    {
        return $this->transactionIdentifiers;
    }

    /**
     * Sets transactionIdentifiers.
     *
     * @param OpenAPI\Server\Model\TransactionIdentifier[] $transactionIdentifiers
     *
     * @return $this
     */
    public function setTransactionIdentifiers(array $transactionIdentifiers): array
    {
        $this->transactionIdentifiers = $transactionIdentifiers;

        return $this;
    }
}


