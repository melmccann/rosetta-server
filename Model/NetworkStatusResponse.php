<?php
/**
 * NetworkStatusResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Rosetta
 *
 * A Standard for Blockchain Interaction
 *
 * The version of the OpenAPI document: 1.3.1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the NetworkStatusResponse model.
 *
 * NetworkStatusResponse contains basic information about the node&#39;s view of a blockchain network.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class NetworkStatusResponse 
{
        /**
     * @var OpenAPI\Server\Model\BlockIdentifier
     * @SerializedName("current_block_identifier")
     * @Assert\NotNull()
     * @Assert\Type("OpenAPI\Server\Model\BlockIdentifier")
     * @Type("OpenAPI\Server\Model\BlockIdentifier")
     */
    protected $currentBlockIdentifier;

    /**
     * The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in milliseconds because some blockchains produce blocks more often than once a second.
     *
     * @var int
     * @SerializedName("current_block_timestamp")
     * @Assert\NotNull()
     * @Assert\Type("int")
     * @Type("int")
     * @Assert\GreaterThanOrEqual(0)
     */
    protected $currentBlockTimestamp;

    /**
     * @var OpenAPI\Server\Model\BlockIdentifier
     * @SerializedName("genesis_block_identifier")
     * @Assert\NotNull()
     * @Assert\Type("OpenAPI\Server\Model\BlockIdentifier")
     * @Type("OpenAPI\Server\Model\BlockIdentifier")
     */
    protected $genesisBlockIdentifier;

    /**
     * @var OpenAPI\Server\Model\Peer[]
     * @SerializedName("peers")
     * @Assert\NotNull()
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\Peer")
     * })
     * @Type("array<OpenAPI\Server\Model\Peer>")
     */
    protected $peers;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->currentBlockIdentifier = isset($data['currentBlockIdentifier']) ? $data['currentBlockIdentifier'] : null;
        $this->currentBlockTimestamp = isset($data['currentBlockTimestamp']) ? $data['currentBlockTimestamp'] : null;
        $this->genesisBlockIdentifier = isset($data['genesisBlockIdentifier']) ? $data['genesisBlockIdentifier'] : null;
        $this->peers = isset($data['peers']) ? $data['peers'] : null;
    }

    /**
     * Gets currentBlockIdentifier.
     *
     * @return OpenAPI\Server\Model\BlockIdentifier
     */
    public function getCurrentBlockIdentifier(): BlockIdentifier
    {
        return $this->currentBlockIdentifier;
    }

    /**
     * Sets currentBlockIdentifier.
     *
     * @param OpenAPI\Server\Model\BlockIdentifier $currentBlockIdentifier
     *
     * @return $this
     */
    public function setCurrentBlockIdentifier(BlockIdentifier $currentBlockIdentifier): BlockIdentifier
    {
        $this->currentBlockIdentifier = $currentBlockIdentifier;

        return $this;
    }

    /**
     * Gets currentBlockTimestamp.
     *
     * @return int
     */
    public function getCurrentBlockTimestamp()
    {
        return $this->currentBlockTimestamp;
    }

    /**
     * Sets currentBlockTimestamp.
     *
     * @param int $currentBlockTimestamp  The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in milliseconds because some blockchains produce blocks more often than once a second.
     *
     * @return $this
     */
    public function setCurrentBlockTimestamp($currentBlockTimestamp)
    {
        $this->currentBlockTimestamp = $currentBlockTimestamp;

        return $this;
    }

    /**
     * Gets genesisBlockIdentifier.
     *
     * @return OpenAPI\Server\Model\BlockIdentifier
     */
    public function getGenesisBlockIdentifier(): BlockIdentifier
    {
        return $this->genesisBlockIdentifier;
    }

    /**
     * Sets genesisBlockIdentifier.
     *
     * @param OpenAPI\Server\Model\BlockIdentifier $genesisBlockIdentifier
     *
     * @return $this
     */
    public function setGenesisBlockIdentifier(BlockIdentifier $genesisBlockIdentifier): BlockIdentifier
    {
        $this->genesisBlockIdentifier = $genesisBlockIdentifier;

        return $this;
    }

    /**
     * Gets peers.
     *
     * @return OpenAPI\Server\Model\Peer[]
     */
    public function getPeers(): array
    {
        return $this->peers;
    }

    /**
     * Sets peers.
     *
     * @param OpenAPI\Server\Model\Peer[] $peers
     *
     * @return $this
     */
    public function setPeers(array $peers): array
    {
        $this->peers = $peers;

        return $this;
    }
}


