<?php
/**
 * TransactionIdentifier
 *
 * PHP version 5
 *
 * @category Class
 * @package  melmccann\rosettaserverstubs\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Rosetta
 *
 * A Standard for Blockchain Interaction
 *
 * The version of the OpenAPI document: 1.3.1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace melmccann\rosettaserverstubs\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the TransactionIdentifier model.
 *
 * The transaction_identifier uniquely identifies a transaction in a particular network and block or in the mempool.
 *
 * @package melmccann\rosettaserverstubs\Model
 * @author  OpenAPI Generator team
 */
class TransactionIdentifier 
{
        /**
     * Any transactions that are attributable only to a block (ex: a block event) should use the hash of the block as the identifier.
     *
     * @var string
     * @SerializedName("hash")
     * @Assert\NotNull()
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $hash;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->hash = isset($data['hash']) ? $data['hash'] : null;
    }

    /**
     * Gets hash.
     *
     * @return string
     */
    public function getHash()
    {
        return $this->hash;
    }

    /**
     * Sets hash.
     *
     * @param string $hash  Any transactions that are attributable only to a block (ex: a block event) should use the hash of the block as the identifier.
     *
     * @return $this
     */
    public function setHash($hash)
    {
        $this->hash = $hash;

        return $this;
    }
}


