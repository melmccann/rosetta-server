<?php
/**
 * BlockTransactionRequestTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Server\Tests\Model
 * @author   openapi-generator contributors
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Rosetta
 *
 * A Standard for Blockchain Interaction
 *
 * The version of the OpenAPI document: 1.3.1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Server\Model;

/**
 * BlockTransactionRequestTest Class Doc Comment
 *
 * @category    Class */
// * @description A BlockTransactionRequest is used to fetch a Transaction included in a block that is not returned in a BlockResponse.
/**
 * @package     OpenAPI\Server\Tests\Model
 * @author      openapi-generator contributors
 * @link        https://github.com/openapitools/openapi-generator
 */
class BlockTransactionRequestTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "BlockTransactionRequest"
     */
    public function testBlockTransactionRequest()
    {
        $testBlockTransactionRequest = new BlockTransactionRequest();
    }

    /**
     * Test attribute "networkIdentifier"
     */
    public function testPropertyNetworkIdentifier()
    {
    }

    /**
     * Test attribute "blockIdentifier"
     */
    public function testPropertyBlockIdentifier()
    {
    }

    /**
     * Test attribute "transactionIdentifier"
     */
    public function testPropertyTransactionIdentifier()
    {
    }
}
