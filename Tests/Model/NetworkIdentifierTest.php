<?php
/**
 * NetworkIdentifierTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  melmccann\rosettaserverstubs\Tests\Model
 * @author   openapi-generator contributors
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Rosetta
 *
 * A Standard for Blockchain Interaction
 *
 * The version of the OpenAPI document: 1.3.1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */

namespace melmccann\rosettaserverstubs\RosettaServerStubsModel;

/**
 * NetworkIdentifierTest Class Doc Comment
 *
 * @category    Class */
// * @description The network_identifier specifies which network a particular object is associated with.
/**
 * @package     melmccann\rosettaserverstubs\Tests\Model
 * @author      openapi-generator contributors
 * @link        https://github.com/openapitools/openapi-generator
 */
class NetworkIdentifierTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "NetworkIdentifier"
     */
    public function testNetworkIdentifier()
    {
        $testNetworkIdentifier = new NetworkIdentifier();
    }

    /**
     * Test attribute "blockchain"
     */
    public function testPropertyBlockchain()
    {
    }

    /**
     * Test attribute "network"
     */
    public function testPropertyNetwork()
    {
    }

    /**
     * Test attribute "subNetworkIdentifier"
     */
    public function testPropertySubNetworkIdentifier()
    {
    }
}
